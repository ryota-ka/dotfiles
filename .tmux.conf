unbind C-b
set -g prefix C-q
bind C-q send-prefix

set-option -g default-command "/Users/Ryota/bin/reattach-to-user-namespace -l zsh"
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# tmux内のvimで256色を設定する方法
#まず
#tmux kill-server でtmuxのセッション?をすべて削除
#このファイルを~/.tmux.conf として設置
#シェルがzshでない場合は
#設定内部で使用するシェルは一番下に記載する
#作成したシェルを~/bin に作成してパスを通す
#最後に tmux -f ~/.tmux.conf で設定ファイルを読み込ませて起動すると設定が反映される
#
#スクリーンにxtermを使用するのは非推奨の用だがvimで動きがおかしくなるのと、
#今のところ問題ないのでxtermを指定する
#
#参考
#設定の内容は↓のコピペ
#http://n.blueblack.net/articles/2012-07-20_04_comfortable_cui_environment_tmux/
#
#ペインが複数になった時にはteratermなどでコピペが効かなくなるけど
#windows:Ctrl
#mac:option
#を押しながらだとできるようになる
#
#
#+----------------------------------------------------------------------------------------+
#  セッションオプション
#+----------------------------------------------------------------------------------------+
#新しいウィンドウのベース番号
set-option -g base-index 1
#全てのベルを無視
set-option -g bell-action none
#各セッションで保持するバッファ数
set-option -g buffer-limit 20
#256色端末を使用
#"screen-256color" にするとvimの<Home><End>が変わるのでxtermに変更
set-option -g default-terminal "screen-256color"
#set-option -g default-terminal "xterm"
#ウィンドウ履歴で保持される最大行数
set-option -g history-limit 5000
#Escapeキー入力時の待ち時間(0.5秒)をキャンセル
set-option -s escape-time 0
#起動シェルを指定
set-option -g default-shell /bin/zsh
#+----------------------------------------------------------------------------------------+
#  ステータスライン
#+----------------------------------------------------------------------------------------+
#status-left 及び status-right の非ASCII文字をUTF-8として扱う
#set-option -g status-utf8 on

#set-option -g status-left '#[fg=white,bg=blue][S:#S]#[default]'
#set-option -g status-right '#[fg=black,bg=cyan][CPU=#(getCpuUsage.sh) MEM=#(getMemUsage.sh)]#[fg=white,bg=blue][%Y/%m/%d(%a)%H:%M]#[default]'

set-option -g status-left-length 18
set-option -g status-left '#[fg=colour015,bg=colour208][%Y/%m/%d %H:%M]#[default]'
set-option -g status-right '#[fg=white,bg=colour208][#S]#[default]'
#set-option -g status-right '#[fg=white,bg=colour008]#[fg=black,bg=colour008][%Y/%m/%d %H:%M]#[default]'
set-option -g status-right-length 50

set-option -g status-fg white
set-option -g status-bg colour008
set-window-option -g window-status-fg white
set-window-option -g window-status-bg colour008
set-window-option -g window-status-current-fg colour015
set-window-option -g window-status-current-bg colour162
#+----------------------------------------------------------------------------------------+
#  ウィンドウオプション
#+----------------------------------------------------------------------------------------+
#ウィンドウを実行コマンド名で自動リネーム
set-window-option -g automatic-rename on
#スクロールモード、コピーモード、選択モードで vi のキーバインドを使う
set-window-option -g mode-keys vi
#ウィンドウで動作があるとステータスラインでハイライト
set-window-option -g monitor-activity on
#UTF-8 シーケンスが現れることに備える
set-window-option -g utf8 on

#+----------------------------------------------------------------------------------------+
#  その他
#+----------------------------------------------------------------------------------------+
# マウス関連
set-option -gw mode-mouse on
set-window-option -g mode-mouse on
set-option -g mouse-utf8 on
## mouse-resize-pane on にするとteratermでのコピー&ペーストがCtrlボタンを押しながらやる必要があるのでOFF
#set-option -g mouse-resize-pane on
set-option -g mouse-select-pane on
set-option -g mouse-select-window on

# prefix + r で設定ファイルを再読み込み
unbind r
bind r source-file ~/.tmux.conf

# キーバインド
# 新規ウィンドウ
bind c new-window -c "#{pane_current_path}"
# 各種ペインのリサイズ
bind H resize-pane -L 5
bind J resize-pane -D 5
# ウィンドウ選択画面
bind Space choose-window
# 分割していたペインそれぞれをWindowに
bind b break-pane
# ペインの縦分割
bind h split-window -v -c "#{pane_current_path}"
# ペインの横分割
bind v split-window -h -c "#{pane_current_path}"
# kill pane
bind k kill-pane
# rename session
unbind N
bind-key N command-prompt 'rename-session %%'
