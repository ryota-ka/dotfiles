AllowAmbiguousTypes
ApplicativeDo
Arrows
BangPatterns
BinaryLiterals
BlockArguments
CApiFFI
COLUMN
COMPLETE
CONLIKE
CPP
CUSKs
ConstrainedClassMethods
ConstraintKinds
DEPRECATED
DataKinds
DatatypeContexts
DefaultSignatures
DeriveAnyClass
DeriveDataTypeable
DeriveFoldable
DeriveFunctor
DeriveGeneric
DeriveLift
DeriveTraversable
DerivingStrategies
DerivingVia
DisambiguateRecordFields
DuplicateRecordFields
EmptyCase
EmptyDataDecls
EmptyDataDeriving
ExistentialQuantification
ExplicitForAll
ExplicitNamespaces
ExtendedDefaultRules
FlexibleContexts
FlexibleInstances
ForeignFunctionInterface
FunctionalDependencies
GADTSyntax
GADTs
GeneralisedNewtypeDeriving
Haskell2010
Haskell98
HexFloatLiterals
INCLUDE
INCOHERENT
INLINABLE
INLINE
ImplicitParams
ImportQualifiedPost
ImpredicativeTypes
IncoherentInstances
InstanceSigs
InterruptibleFFI
KindSignatures
LANGUAGE
LINE
LambdaCase
LiberalTypeSynonyms
MINIMAL
MagicHash
MonadComprehensions
MonadFailDesugaring
MonoLocalBinds
MultiParamTypeClasses
MultiWayIf
NOINLINE
NOUNPACK
NPlusKPatterns
NamedFieldPuns
NamedWildCards
NegativeLiterals
NoImplicitPrelude
NoMonomorphismRestriction
NoPatternGuards
NoTraditionalRecordSyntax
NullaryTypeClasses
NumDecimals
NumericUnderscores
OPTIONS_GHC
OVERLAPPABLE
OVERLAPPING
OVERLAPS
OverlappingInstances
OverloadedLabels
OverloadedLists
OverloadedStrings
PackageImports
ParallelListComp
PartialTypeSignatures
PatternSynonyms
PolyKinds
PostfixOperators
QuantifiedConstraints
QuasiQuotes
RULES
Rank2Types
RankNTypes
RebindableSyntax
RecordWildCards
RecursiveDo
RoleAnnotations
SOURCE
SPECIALIZE
Safe
ScopedTypeVariables
StandaloneDeriving
StandaloneKindSignatures
StarIsType
StaticPointers
Strict
StrictData
TemplateHaskell
TemplateHaskellQuotes
TransformListComp
Trustworthy
TupleSections
TypeApplications
TypeFamilies
TypeFamilyDependencies
TypeInType
TypeOperators
TypeSynonymInstances
UNPACK
UnboxedSums
UnboxedTuples
UndecidableInstances
UndecidableSuperClasses
UnicodeSyntax
UnliftedFFITypes
UnliftedNewtypes
Unsafe
ViewPatterns
WARNING
anyclass
as
by
capi
case
ccall
class
data
default
dependency
deriving
do
dynamic
else
export
family
forall
foreign
group
hiding
if
import
in
infix
infixl
infixr
instance
interruptible
javascript
label
let
mdo
module
ndecreasingIndentation
newtype
nominal
of
pattern
phantom
prim
proc
qualified
rec
representational
role
safe
signature
static
stdcall
stock
then
type
unit
unsafe
using
via
where
